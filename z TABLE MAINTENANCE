*&---------------------------------------------------------------------*
*& Report ZTABLEMAINTENANCE
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ztablemaintenance.

TYPES: BEGIN OF ty_select,
         line TYPE fieldname,
       END OF ty_select,

       BEGIN OF ty_dd02t,
         tabname TYPE dd02t-tabname,
         ddtext  TYPE dd02t-ddtext,
       END OF ty_dd02t.

CLASS lcl_event_handler DEFINITION.
  PUBLIC SECTION.

    METHODS handle_data_changed
      FOR EVENT data_changed OF cl_gui_alv_grid
      IMPORTING er_data_changed.

ENDCLASS.                    "lcl_event_handler DEFINITION

CLASS lcl_event_handler IMPLEMENTATION.

  METHOD handle_data_changed.
  ENDMETHOD.                    "handle_data_changed

ENDCLASS.                    "lcl_event_handler IMPLEMENTATION

DATA: gt_dd02t     TYPE TABLE OF ty_dd02t,
      gw_dd02t     TYPE ty_dd02t,
      gt_fieldcat  TYPE lvc_t_fcat,

      go_reference TYPE REF TO data,
      go_splitter  TYPE REF TO cl_gui_splitter_container,
      go_container TYPE REF TO cl_gui_container,
      go_event     TYPE REF TO lcl_event_handler,
      go_alv       TYPE REF TO cl_gui_alv_grid.

FIELD-SYMBOLS <fs_table> TYPE STANDARD TABLE.

SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE TEXT-001.
  PARAMETERS: p_table(40) AS LISTBOX VISIBLE LENGTH 40.
SELECTION-SCREEN END OF BLOCK b02.

INITIALIZATION.
  PERFORM busca_tabelas.

START-OF-SELECTION.
  PERFORM monta_tabela.

END-OF-SELECTION.
  CALL SCREEN 1001.
*&---------------------------------------------------------------------*
*& Form BUSCA_TABELAS
*&---------------------------------------------------------------------*
FORM busca_tabelas .

  DATA: lv_name  TYPE vrm_id,

        lr_tname TYPE RANGE OF dd02t-tabname,

        lt_ret   TYPE TABLE OF zsbc_range_type,
        lt_list  TYPE vrm_values.

  CALL FUNCTION 'ZFMBC_GET_PARAMETER'
    EXPORTING
      i_process_id = 'TABLEMAINTENANCE'
      i_field_name = 'TABLES'
    TABLES
      t_ret        = lt_ret.

  CHECK lines( lt_ret ) GT 0.

  lr_tname = VALUE #( FOR lw_ret IN lt_ret ( sign   = 'I'
                                             option = 'EQ'
                                             low    = lw_ret-low(30)
                                             high   = space ) ).
  SELECT dd02t~tabname, dd02t~ddtext FROM dd02t
   INNER JOIN  dd09l ON dd09l~tabname  EQ dd02t~tabname
                    AND dd09l~as4local EQ dd02t~as4local
                    AND dd09l~as4vers  EQ dd02t~as4vers
    INTO TABLE @gt_dd02t
   WHERE dd02t~tabname IN @lr_tname
     AND dd09l~tabart EQ 'APPL0'
   ORDER BY dd02t~tabname, dd02t~ddtext.

  DELETE ADJACENT DUPLICATES FROM gt_dd02t COMPARING tabname.

  lv_name = 'P_TABLE'.

  LOOP AT gt_dd02t INTO DATA(lw_dd02t).
    APPEND INITIAL LINE TO lt_list ASSIGNING FIELD-SYMBOL(<fs_list>).
    <fs_list>-key  = lw_dd02t-tabname.
    <fs_list>-text = lw_dd02t-ddtext.
  ENDLOOP.

  CALL FUNCTION 'VRM_SET_VALUES'
    EXPORTING
      id              = lv_name
      values          = lt_list
    EXCEPTIONS
      id_illegal_name = 1
      OTHERS          = 2.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form MONTA_TABELA
*&---------------------------------------------------------------------*
FORM monta_tabela .

  DATA lw_tables       TYPE ty_select.

  IF p_table IS INITIAL.
    MESSAGE i368(00) WITH TEXT-005 DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.

  READ TABLE gt_dd02t INTO gw_dd02t WITH KEY tabname = p_table
                                      BINARY SEARCH.
  IF sy-subrc NE 0.
    MESSAGE i368(00) WITH TEXT-004 DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = gw_dd02t-tabname
    CHANGING
      ct_fieldcat      = gt_fieldcat.

  CALL METHOD cl_alv_table_create=>create_dynamic_table
    EXPORTING
      it_fieldcatalog = gt_fieldcat
    IMPORTING
      ep_table        = go_reference.

  ASSIGN go_reference->* TO <fs_table>.

  lw_tables-line = gw_dd02t-tabname.

  SELECT *
    INTO TABLE @<fs_table>
    FROM (lw_tables-line)
   ORDER BY PRIMARY KEY.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXIBE_TABELA
*&---------------------------------------------------------------------*
FORM exibe_tabela .

  CALL SCREEN 1001.

ENDFORM.
*&---------------------------------------------------------------------*
*& Module STATUS_1001 OUTPUT
*&---------------------------------------------------------------------*
MODULE status_1001 OUTPUT.

  SET PF-STATUS '1001'. "SAVE/BACK/EXIT/CANC
  SET TITLEBAR '1001'.

  PERFORM monta_tela_alv.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_1001  INPUT
*&---------------------------------------------------------------------*
MODULE user_command_1001 INPUT.

  CASE sy-ucomm.

    WHEN 'SAVE'.
      CLEAR p_table.
      PERFORM save_table.

    WHEN 'BACK' OR 'CANC' OR 'EXIT'.
      CLEAR p_table.
      SET SCREEN 0.
      LEAVE SCREEN.

  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*& Form MONTA_TELA_ALV
*&---------------------------------------------------------------------*
FORM monta_tela_alv .

  DATA lw_layout     TYPE lvc_s_layo.

  lw_layout-grid_title = gw_dd02t-ddtext.
  lw_layout-cwidth_opt = 'X'.
  lw_layout-edit       = 'X'.

  IF go_splitter IS NOT BOUND.
    CREATE OBJECT go_splitter
      EXPORTING
        parent  = cl_gui_container=>default_screen
        rows    = 1
        columns = 1.

    CALL METHOD go_splitter->get_container
      EXPORTING
        row       = 1
        column    = 1
      RECEIVING
        container = go_container.
  ENDIF.

  IF go_alv IS NOT BOUND.
    CREATE OBJECT go_alv
      EXPORTING
        i_parent = go_container.

    CREATE OBJECT go_event.
    SET HANDLER go_event->handle_data_changed FOR go_alv.

    CALL METHOD go_alv->register_edit_event
      EXPORTING
        i_event_id = cl_gui_alv_grid=>mc_evt_modified.

    CALL METHOD go_alv->set_table_for_first_display
      EXPORTING
        i_structure_name = gw_dd02t-tabname
        is_layout        = lw_layout
      CHANGING
        it_fieldcatalog  = gt_fieldcat
        it_outtab        = <fs_table>.

    CALL METHOD go_alv->set_toolbar_interactive.

    CALL METHOD cl_gui_control=>set_focus
      EXPORTING
        control = go_alv.
  ELSE.

    go_alv->refresh_table_display(
          EXPORTING
            i_soft_refresh = abap_true
        ).
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SAVE_TABLE
*&---------------------------------------------------------------------*
FORM save_table .

  IF <fs_table> IS ASSIGNED.
    DELETE FROM (gw_dd02t-tabname) WHERE mandt NE space.
    MODIFY (gw_dd02t-tabname) FROM TABLE <fs_table>[].

    IF sy-subrc EQ 0.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = abap_true.
      MESSAGE i368(00) WITH TEXT-002.
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
      MESSAGE e368(00) WITH TEXT-003.
    ENDIF.
  ENDIF.

ENDFORM.
